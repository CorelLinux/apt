name: Build apt for armhf only test

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:22.04
      options: --privileged  # 루트 환경 필요시
      
    steps:
      - name: Set up multiarch and sources
        run: |
          dpkg --add-architecture armhf
          cat <<EOF > /etc/apt/sources.list
          deb [arch=amd64] http://archive.ubuntu.com/ubuntu jammy main universe multiverse restricted
          deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports jammy main universe multiverse restricted
          EOF
          apt-get update
          
      - name: 필요한 패키지 설치
        run: |
          apt-get update
          apt-get install -y --no-install-recommends \
            build-essential \
            crossbuild-essential-armhf \
            dpkg-dev \
            fakeroot \
            devscripts \
            git \
            curl \
            wget \
            ca-certificates \
            cmake \
            unzip \
            pkg-config \
            python3 \
            libbz2-dev:armhf \
            libdb-dev:armhf \
            libssl-dev:armhf \
            liblz4-dev:armhf \
            liblzma-dev:armhf \
            libseccomp-dev:armhf \
            libsystemd-dev:armhf \
            libudev-dev:armhf \
            libxxhash-dev:armhf \
            libzstd-dev:armhf \
            zlib1g-dev:armhf

      - name: APT 소스코드 가져오기
        run: |
          apt-get source apt
          cd apt-*
          echo "APT source downloaded."

      - name: 환경 설정 및 빌드
        run: |
          cd apt-*
          dpkg-buildpackage -aarmhf -b

      - name: 빌드 결과 저장
        uses: actions/upload-artifact@v4
        with:
          name: apt-debs-armhf
          path: ../*.deb
