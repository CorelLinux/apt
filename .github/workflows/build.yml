name: Build & Release Custom APT

on:
  push:
    branches: [main]
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix: { arch: [armhf, amd64] }
    container: ubuntu:devel
    env:
      DEBIAN_FRONTEND: noninteractive
    steps:
      - uses: actions/checkout@v3

      # 1. 최신 apt 버전 GitHub API에서 받아오기 (Debian apt repo)
      - name: Get latest apt version
        id: get_version
        run: |
          curl -s https://api.github.com/repos/Debian/apt/releases/latest | jq -r .tag_name | sed 's/^v//' > latest_version.txt
          echo "APT_VERSION=$(cat latest_version.txt)" >> $GITHUB_ENV
          apt-get update
          apt-get install -y \
            build-essential devscripts fakeroot qemu-user-static curl jq wget \
            libbz2-dev libdb-dev libssl-dev liblz4-dev liblzma-dev libseccomp-dev \
            libsystemd-dev libudev-dev libxxhash-dev libzstd-dev zlib1g-dev \
            cmake docbook-xml docbook-xsl googletest \
            ninja-build pkg-config po4a triehash xsltproc doxygen graphviz w3m

      - name: Add sid repo and install latest dpkg-dev
        run: |
          echo 'deb http://deb.debian.org/debian sid main' > /etc/apt/sources.list.d/sid.list
          apt-get update
          apt-get install -y -t sid dpkg-dev libdpkg-perl

      - run: |
          echo 'Acquire::AllowInsecureRepositories "true"; APT::Get::AllowUnauthenticated "true";' | tee /etc/apt/apt.conf.d/99insecure

      - run: |
          echo "deb-src http://ports.ubuntu.com/ubuntu-ports jammy main restricted universe multiverse" >> /etc/apt/sources.list
          echo "deb-src http://ports.ubuntu.com/ubuntu-ports jammy-updates main restricted universe multiverse" >> /etc/apt/sources.list
          echo "deb-src http://ports.ubuntu.com/ubuntu-ports jammy-backports main restricted universe multiverse" >> /etc/apt/sources.list
          echo "deb-src http://ports.ubuntu.com/ubuntu-ports jammy-security main restricted universe multiverse" >> /etc/apt/sources.list

      - run: apt-get update && apt-get source apt=${{ env.APT_VERSION }}

      - run: |
          chmod +x patches/patcher.sh
          ./patches/patcher.sh
      - env:
          DEB_BUILD_OPTIONS: nocheck
        run: |
          mkdir -p apt-${{ env.APT_VERSION }}
          echo -e "Package: apt\nPin: version ${{ env.APT_VERSION }}*\nPin-Priority: 1001" > apt-${{ env.APT_VERSION }}/preferences

      - env:
          DEB_BUILD_OPTIONS: nocheck
        run: dpkg-buildpackage -us -uc -b -a${{ matrix.arch }} --host-arch=${{ matrix.arch }}

      - uses: actions/upload-artifact@v4
        with:
          name: custom-apt-${{ matrix.arch }}
          path: ../apt_${{ env.APT_VERSION }}*.deb

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: custom-apt-armhf
          path: armhf

      - uses: actions/download-artifact@v4
        with:
          name: custom-apt-amd64
          path: amd64

      - uses: actions/create-release@v1
        with:
          tag_name: custom-apt-${{ env.APT_VERSION }}
          release_name: Custom APT ${{ env.APT_VERSION }}

      - uses: softprops/action-gh-release@v1
        with:
          files: |
            armhf/apt_${{ env.APT_VERSION }}*.deb
            amd64/apt_${{ env.APT_VERSION }}*.deb
