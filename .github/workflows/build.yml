name: Build APT Package (amd64 & armhf)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    container:
      image: debian:sid # amd64용 Debian Sid 이미지
    steps:
      - name: Prepare working directory
        run: mkdir -p /home/runner/work/apt/apt

      - name: Add Debian Sid Repo and Install Keyring
        run: |
          # sources.list를 새로 작성. 기존 내용은 모두 지워짐.
          echo "deb [signed-by=/etc/apt/keyrings/debian-archive-keyring.gpg] http://deb.debian.org/debian sid main" > /etc/apt/sources.list
          echo "deb-src [signed-by=/etc/apt/keyrings/debian-archive-keyring.gpg] http://deb.debian.org/debian sid main" >> /etc/apt/sources.list
          
          # debian-archive-keyring 설치 (apt update 전에 필요할 수 있음)
          # 일반적으로 base image에는 이미 기본 키가 있어 apt update가 가능하고, 
          # 이후 debian-archive-keyring을 설치하는 방식이 더 일반적.
          # 만약 그래도 에러가 난다면, curl로 키를 다운로드 후 apt-key add 하는 방안 고려.
          apt-get update
          apt-get install -y debian-archive-keyring

      - name: Install dependencies (apt, build-essential, etc)
        working-directory: /home/runner/work/apt/apt
        run: |
          apt-get update # sources.list가 새로 추가되었으므로 다시 업데이트
          apt-get install -y \
            build-essential \
            cmake \
            ninja-build \
            pkg-config \
            dpkg-dev \
            devscripts \
            fakeroot \
            libssl-dev \
            libdb-dev \
            libbz2-dev \
            liblzma-dev \
            liblz4-dev \
            libzstd-dev \
            libudev-dev \
            libsystemd-dev \
            libseccomp-dev \
            libxxhash-dev \
            docbook-xml \
            docbook-xsl \
            xsltproc \
            graphviz \
            w3m \
            po4a \
            googletest \ 
            libgtest-dev \
            triehash \
            zlib1g-dev \
            doxygen

          # googletest 준비
          cd /usr/src
          git clone --depth 1 --branch release-1.14.0 https://github.com/google/googletest.git
          cd googletest && cmake -B build && cmake --build build
          cp -r googletest include /usr

      - name: Checkout source
        uses: actions/checkout@v4
        with:
          path: /home/runner/work/apt/apt

      - name: Patch APT source
        run: |
          chmod +x patches/patcher.sh
          ./patches/patcher.sh

      - name: Build (amd64)
        working-directory: /home/runner/work/apt/apt
        run: |
          dpkg-buildpackage -us -uc -b

  build-armhf:
    runs-on: ubuntu-latest # AMD64 런너 그대로 사용
    container:
      image: arm32v7/debian:sid # armhf용 Debian Sid 이미지 (QEMU로 에뮬레이션)
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Prepare working directory
        run: mkdir -p /home/runner/work/apt/apt

      - name: Add Debian Sid Repo and Install Keyring
        run: |
          # sources.list를 새로 작성. 기존 내용은 모두 지워짐.
          # armhf 컨테이너이므로 arch=armhf 명시
          echo "deb [arch=armhf, signed-by=/etc/apt/keyrings/debian-archive-keyring.gpg] http://deb.debian.org/debian sid main" > /etc/apt/sources.list
          echo "deb-src [arch=armhf, signed-by=/etc/apt/keyrings/debian-archive-keyring.gpg] http://deb.debian.org/debian sid main" >> /etc/apt/sources.list

          # debian-archive-keyring 설치 (apt update 전에 필요할 수 있음)
          apt-get update
          apt-get install -y debian-archive-keyring
        
      - name: Install dependencies (apt, build-essential, etc)
        working-directory: /home/runner/work/apt/apt
        run: |
          apt-get update # sources.list가 새로 추가되었으므로 다시 업데이트
          apt-get install -y \
            build-essential \ # QEMU 에뮬레이션이므로 build-essential만 필요
            cmake \
            ninja-build \
            pkg-config \
            devscripts \
            fakeroot \
            dpkg-dev \
            libssl-dev \ # armhf 컨테이너이므로 :armhf 접미사 필요 없음
            libdb-dev \
            libbz2-dev \
            liblzma-dev \
            liblz4-dev \
            libzstd-dev \
            libudev-dev \
            libsystemd-dev \
            libseccomp-dev \
            libxxhash-dev \
            docbook-xml \
            docbook-xsl \
            xsltproc \
            graphviz \
            w3m \
            po4a \
            googletest \ 
            libgtest-dev \
            triehash \
            zlib1g-dev \
            doxygen

          # googletest 준비
          cd /usr/src
          git clone --depth 1 --branch release-1.14.0 https://github.com/google/googletest.git
          cd googletest && cmake -B build && cmake --build build
          cp -r googletest include /usr

      - name: Checkout source
        uses: actions/checkout@v4
        with:
          path: /home/runner/work/apt/apt

      - name: Patch APT source
        run: |
          chmod +x patches/patcher.sh
          ./patches/patcher.sh

      - name: Build (armhf)
        working-directory: /home/runner/work/apt/apt
        run: |
          dpkg-buildpackage -us -uc -b -aarmhf
