name: Build APT Package (amd64 & armhf)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    container:
      image: debian:bookworm
    steps:
      - name: Prepare working directory
        run: mkdir -p /home/runner/work/apt/apt

      - name: Install dependencies (apt, build-essential, etc)
        working-directory: /home/runner/work/apt/apt
        run: |
          apt-get update
          apt-get install -y \
            build-essential \
            cmake \
            ninja-build \
            pkg-config \
            dpkg-dev \
            devscripts \
            fakeroot \
            libssl-dev \
            libdb-dev \
            libbz2-dev \
            liblzma-dev \
            liblz4-dev \
            libzstd-dev \
            libudev-dev \
            libsystemd-dev \
            libseccomp-dev \
            libxxhash-dev \
            docbook-xml \
            docbook-xsl \
            xsltproc \
            graphviz \
            w3m \
            po4a \
            triehash \
            zlib1g-dev \
            doxygen # googletest와 libgtest-dev는 이제 직접 빌드하므로 목록에서 제거

      - name: Download and Extract Googletest (amd64)
        working-directory: /home/runner/work/apt/apt # main working directory
        run: |
          curl -L https://github.com/google/googletest/archive/refs/tags/release-1.12.1.tar.gz | tar xz
          mv googletest-release-1.12.1 googletest-1.12.1

      - name: Build and Install Googletest (amd64)
        working-directory: ./googletest-1.12.1 # googletest source directory
        run: |
          mkdir -p build && cd build
          cmake .. \
            -DCMAKE_SYSTEM_NAME=Linux \
            -DCMAKE_SYSTEM_PROCESSOR=x86_64 \ # amd64용 프로세서 지정
            -DCMAKE_INSTALL_PREFIX=../../gtest-amd64-install
          make -j$(nproc)
          make install

      - name: Checkout source
        uses: actions/checkout@v4
        with:
          path: /home/runner/work/apt/apt

      - name: Patch APT source
        run: |
          chmod +x patches/patcher.sh
          ./patches/patcher.sh

      - name: Build (amd64)
        working-directory: /home/runner/work/apt/apt
        run: |
          dpkg-buildpackage -us -uc -b

  build-armhf:
    runs-on: ubuntu-latest
    container:
      image: debian:bookworm
    steps:
      - name: Prepare working directory
        run: mkdir -p /home/runner/work/apt/apt

      - name: Install cross toolchain & deps
        working-directory: /home/runner/work/apt/apt
        run: |
          dpkg --add-architecture armhf
          apt-get update
          apt-get install -y \
            crossbuild-essential-armhf \
            cmake \
            ninja-build \
            pkg-config \
            devscripts \
            fakeroot \
            dpkg-dev \
            libssl-dev:armhf \
            libdb-dev:armhf \
            libbz2-dev:armhf \
            liblzma-dev:armhf \
            liblz4-dev:armhf \
            libzstd-dev:armhf \
            libudev-dev:armhf \
            libsystemd-dev:armhf \
            libseccomp-dev:armhf \
            libxxhash-dev:armhf \
            docbook-xml \
            docbook-xsl \
            xsltproc \
            graphviz \
            w3m \
            po4a \
            triehash \
            zlib1g-dev \
            doxygen # googletest와 libgtest-dev는 이제 직접 빌드하므로 목록에서 제거

      - name: Download and Extract Googletest (armhf)
        working-directory: /home/runner/work/apt/apt # main working directory
        run: |
          curl -L https://github.com/google/googletest/archive/refs/tags/release-1.12.1.tar.gz | tar xz
          mv googletest-release-1.12.1 googletest-1.12.1

      - name: Cross-compile Googletest for armhf
        working-directory: ./googletest-1.12.1 # googletest source directory
        run: |
          mkdir -p build && cd build
          cmake .. \
            -DCMAKE_SYSTEM_NAME=Linux \
            -DCMAKE_SYSTEM_PROCESSOR=arm \
            -DCMAKE_C_COMPILER=arm-linux-gnueabihf-gcc \
            -DCMAKE_CXX_COMPILER=arm-linux-gnueabihf-g++ \
            -DCMAKE_FIND_ROOT_PATH=/usr/arm-linux-gnueabihf \
            -DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=NEVER \
            -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY \
            -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY \
            -DCMAKE_INSTALL_PREFIX=../../gtest-armhf-install
          make -j$(nproc)
          make install

      - name: Checkout source
        uses: actions/checkout@v4
        with:
          path: /home/runner/work/apt/apt

      - name: Patch APT source
        run: |
          chmod +x patches/patcher.sh
          ./patches/patcher.sh

      - name: Build (armhf)
        working-directory: /home/runner/work/apt/apt
        run: |
          dpkg-buildpackage -us -uc -b -aarmhf
