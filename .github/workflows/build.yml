name: Build APT Package (amd64 & armhf)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:24.04
    steps:
      - name: Prepare working directory
        run: mkdir -p /home/runner/work/apt/apt

      - name: Add Ubuntu Repo (Fixed to Noble Numbat)
        run: |
          UBUNTU_CODENAME="noble"
          echo "deb http://kr.archive.ubuntu.com/ubuntu/ $UBUNTU_CODENAME main restricted universe multiverse" > /etc/apt/sources.list
          echo "deb-src http://kr.archive.ubuntu.com/ubuntu/ $UBUNTU_CODENAME main restricted universe multiverse" >> /etc/apt/sources.list
          echo "deb http://kr.archive.ubuntu.com/ubuntu/ ${UBUNTU_CODENAME}-updates main restricted universe multiverse" >> /etc/apt/sources.list
          echo "deb-src http://kr.archive.ubuntu.com/ubuntu/ ${UBUNTU_CODENAME}-updates main restricted universe multiverse" >> /etc/apt/sources.list
          echo "deb http://kr.archive.ubuntu.com/ubuntu/ ${UBUNTU_CODENAME}-security main restricted universe multiverse" >> /etc/apt/sources.list
          echo "deb-src http://kr.archive.ubuntu.com/ubuntu/ ${UBUNTU_CODENAME}-security main restricted universe multiverse" >> /etc/apt/sources.list
          echo "deb http://kr.archive.ubuntu.com/ubuntu/ ${UBUNTU_CODENAME}-proposed main restricted universe multiverse" >> /etc/apt/sources.list
          echo "deb-src http://kr.archive.ubuntu.com/ubuntu/ ${UBUNTU_CODENAME}-proposed main restricted universe multiverse" >> /etc/apt/sources.list

      - name: Install dependencies (apt, build-essential, etc)
        working-directory: /home/runner/work/apt/apt
        run: |
          apt-get update
          apt-get install -y \
            build-essential \
            cmake \
            ninja-build \
            pkg-config \
            dpkg-dev \
            devscripts \
            fakeroot \
            debhelper \
            libssl-dev \
            libdb-dev \
            libbz2-dev \
            liblzma-dev \
            liblz4-dev \
            libzstd-dev \
            libudev-dev \
            libsystemd-dev \
            libseccomp-dev \
            libxxhash-dev \
            docbook-xml \
            docbook-xsl \
            xsltproc \
            graphviz \
            w3m \
            po4a \
            googletest \
            libgtest-dev \
            triehash \
            zlib1g-dev \
            doxygen
          which dh

      - name: Reinstall debhelper (Safeguard)
        working-directory: /home/runner/work/apt/apt
        run: |
          apt-get install -y --reinstall debhelper
          which dh

      - name: Checkout source
        uses: actions/checkout@v4
        with:
          path: /home/runner/work/apt/apt

      - name: Patch APT source
        run: |
          chmod +x patches/patcher.sh
          ./patches/patcher.sh

      - name: Build (amd64)
        working-directory: /home/runner/work/apt/apt
        run: |
          dpkg-buildpackage -us -uc -b 

  build-armhf:
    runs-on: ubuntu-latest
    container:
      image: debian:bookworm
    steps:
      - name: Prepare working directory
        run: mkdir -p /home/runner/work/apt/apt
        
      - name: Install cross toolchain & deps
        working-directory: /home/runner/work/apt/apt
        run: |
          dpkg --add-architecture armhf
          apt-get update
          apt-get install -y \
            crossbuild-essential-armhf \
            cmake \
            ninja-build \
            pkg-config \
            devscripts \
            fakeroot \
            debhelper \
            dpkg-dev \
            libssl-dev:armhf \
            libdb-dev:armhf \
            libbz2-dev:armhf \
            liblzma-dev:armhf \
            liblz4-dev:armhf \
            libzstd-dev:armhf \
            libudev-dev:armhf \
            libsystemd-dev:armhf \
            libseccomp-dev:armhf \
            libxxhash-dev:armhf \
            docbook-xml \
            docbook-xsl \
            xsltproc \
            graphviz \
            w3m \
            po4a \
            googletest:armhf \
            libgtest-dev:armhf \
            zlib1g-dev:armhf \
            doxygen
          which dh

      - name: Reinstall debhelper (Safeguard)
        working-directory: /home/runner/work/apt/apt
        run: |
          apt-get install -y --reinstall debhelper
          which dh

      - name: Checkout source
        uses: actions/checkout@v4
        with:
          path: /home/runner/work/apt/apt

      - name: Patch APT source
        run: |
          chmod +x patches/patcher.sh
          ./patches/patcher.sh

      - name: Build (armhf)
        working-directory: /home/runner/work/apt/apt
        run: |
          export CC=arm-linux-gnueabihf-gcc
          export CXX=arm-linux-gnueabihf-g++
          export AR=arm-linux-gnueabihf-ar
          export DEB_HOST_MULTIARCH=arm-linux-gnueabihf
          
          dpkg-buildpackage -us -uc -b -aarmhf -d
