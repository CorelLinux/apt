name: Build & Release Custom APT

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix: { arch: [armhf, amd64] }
    container: ubuntu:rolling
    env:
      DEBIAN_FRONTEND: noninteractive

    steps:
      - uses: actions/checkout@v3

      - name: Get latest apt version
        id: get_version
        run: |
          curl -s https://api.github.com/repos/Debian/apt/releases/latest | jq -r .tag_name | sed 's/^v//' > latest_version.txt
          echo "APT_VERSION=$(cat latest_version.txt)" >> $GITHUB_ENV

      - name: Install required base tools
        run: |
          apt-get update
          apt-get install -y build-essential devscripts fakeroot dpkg-dev qemu-user-static curl wget jq equivs

      - run: apt-get update && apt-get install -y dirmngr

      - name: Import Debian sid GPG keys properly
        run: |
          mkdir -p /etc/apt/keyrings
          curl -fsSL https://ftp-master.debian.org/keys/archive-key-12.asc | gpg --dearmor -o /etc/apt/keyrings/debian-archive-keyring.gpg
          echo "deb [signed-by=/etc/apt/keyrings/debian-archive-keyring.gpg] http://deb.debian.org/debian sid main" > /etc/apt/sources.list
      
      - name: Fix gpg/dirmngr env and import Debian sid keys
        run: |
          mkdir -p ~/.gnupg
          chmod 700 ~/.gnupg
          export GNUPGHOME=~/.gnupg
          echo 'Acquire::AllowInsecureRepositories "true";' > /etc/apt/apt.conf.d/99insecure
          echo 'APT::Get::AllowUnauthenticated "true";' >> /etc/apt/apt.conf.d/99insecure
          echo "deb http://deb.debian.org/debian sid main" > /etc/apt/sources.list
          apt-get update
            
      - name: Add deb-src and sid repo
        run: |
          echo "deb http://deb.debian.org/debian sid main" > /etc/apt/sources.list
          echo "deb-src http://deb.debian.org/debian sid main" >> /etc/apt/sources.list
          apt-get update

      - name: Download apt source
        run: |
          apt-get source apt=${{ env.APT_VERSION }}
          APT_SRC_DIR=$(find . -maxdepth 1 -type d -name "apt-*")
          echo "Found source dir: $APT_SRC_DIR"
          mv "$APT_SRC_DIR" ./apt
        
      - name: Patch apt source
        run: |
          chmod +x patches/patcher.sh
          ./patches/patcher.sh apt-${{ env.APT_VERSION }}

      - name: Install build dependencies
        run: |
          cd apt-${{ env.APT_VERSION }}
          mk-build-deps -i -r -t "apt-get -y --no-install-recommends" || true  # 오류 무시

      - name: Build package
        run: |
          cd apt-${{ env.APT_VERSION }}
          dpkg-buildpackage -us -uc -b -a${{ matrix.arch }} --host-arch=${{ matrix.arch }}

      - uses: actions/upload-artifact@v4
        with:
          name: custom-apt-${{ matrix.arch }}
          path: apt-${{ env.APT_VERSION }}/../apt_${{ env.APT_VERSION }}*.deb
