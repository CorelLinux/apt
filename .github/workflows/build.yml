name: Build APT (amd64 + armhf)

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-amd64:
    name: Build on amd64
    runs-on: ubuntu-latest
    container:
      image: debian:sid

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies (amd64)
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y \
            build-essential devscripts debhelper cmake ninja-build \
            pkg-config libdb-dev libbz2-dev liblz4-dev liblzma-dev \
            libzstd-dev libudev-dev libsystemd-dev libseccomp-dev \
            libxxhash-dev zlib1g-dev perl doxygen

      - name: Build APT (amd64)
        run: |
          dpkg-buildpackage -us -uc -b -aamd64

  build-armhf:
    name: Build on armhf (cross)
    runs-on: ubuntu-latest
    container:
      image: debian:sid

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies for cross build (armhf)
        run: |
          dpkg --add-architecture armhf
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y \
            build-essential crossbuild-essential-armhf \
            gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf \
            debhelper cmake ninja-build pkg-config \
            libdb-dev:armhf libbz2-dev:armhf liblz4-dev:armhf \
            liblzma-dev:armhf libzstd-dev:armhf libudev-dev:armhf \
            libsystemd-dev:armhf libseccomp-dev:armhf libxxhash-dev:armhf \
            zlib1g-dev:armhf perl doxygen

      - name: Set env and build APT (armhf)
        env:
          CC: arm-linux-gnueabihf-gcc
          CXX: arm-linux-gnueabihf-g++
        run: |
          dpkg-buildpackage -us -uc -b -aarmhf
